//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace VELDDev.AvaloniaDSL
{
	/// <summary>
	/// DomainRelationship ExampleModelHasElements
	/// Embedding relationship between the Model and Elements
	/// </summary>
	[DslDesign::DisplayNameResource("VELDDev.AvaloniaDSL.ExampleModelHasElements.DisplayName", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("VELDDev.AvaloniaDSL.ExampleModelHasElements.Description", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("616d4c25-d9c6-4d2d-af2d-091a3f612754")]
	public partial class ExampleModelHasElements : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ExampleModelHasElements domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x616d4c25, 0xd9c6, 0x4d2d, 0xaf, 0x2d, 0x09, 0x1a, 0x3f, 0x61, 0x27, 0x54);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ExampleModelHasElements link in the same Partition as the given ExampleModel
		/// </summary>
		/// <param name="source">ExampleModel to use as the source of the relationship.</param>
		/// <param name="target">Button to use as the target of the relationship.</param>
		public ExampleModelHasElements(ExampleModel source, Button target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ExampleModelHasElements.ExampleModelDomainRoleId, source), new DslModeling::RoleAssignment(ExampleModelHasElements.ElementDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasElements(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasElements(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasElements(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasElements(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ExampleModel domain role code
		
		/// <summary>
		/// ExampleModel domain role Id.
		/// </summary>
		public static readonly global::System.Guid ExampleModelDomainRoleId = new global::System.Guid(0x2f4dd64b, 0x93df, 0x443e, 0xbe, 0x2b, 0x83, 0x4b, 0x19, 0xa0, 0x6b, 0x36);
		
		/// <summary>
		/// DomainRole ExampleModel
		/// </summary>
		[DslDesign::DisplayNameResource("VELDDev.AvaloniaDSL.ExampleModelHasElements/ExampleModel.DisplayName", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("VELDDev.AvaloniaDSL.ExampleModelHasElements/ExampleModel.Description", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Elements", PropertyDisplayNameKey="VELDDev.AvaloniaDSL.ExampleModelHasElements/ExampleModel.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("2f4dd64b-93df-443e-be2b-834b19a06b36")]
		public virtual ExampleModel ExampleModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleModel)DslModeling::DomainRoleInfo.GetRolePlayer(this, ExampleModelDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ExampleModelDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ExampleModel of a Button
		/// <summary>
		/// Gets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ExampleModel GetExampleModel(Button element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ElementDomainRoleId) as ExampleModel;
		}
		
		/// <summary>
		/// Sets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetExampleModel(Button element, ExampleModel newExampleModel)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ElementDomainRoleId, newExampleModel);
		}
		#endregion
		#region Element domain role code
		
		/// <summary>
		/// Element domain role Id.
		/// </summary>
		public static readonly global::System.Guid ElementDomainRoleId = new global::System.Guid(0x318a8023, 0x717c, 0x41ca, 0x88, 0xe0, 0x8e, 0x76, 0xc0, 0x3d, 0x4e, 0x56);
		
		/// <summary>
		/// DomainRole Element
		/// </summary>
		[DslDesign::DisplayNameResource("VELDDev.AvaloniaDSL.ExampleModelHasElements/Element.DisplayName", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("VELDDev.AvaloniaDSL.ExampleModelHasElements/Element.Description", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ExampleModel", PropertyDisplayNameKey="VELDDev.AvaloniaDSL.ExampleModelHasElements/Element.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("318a8023-717c-41ca-88e0-8e76c03d4e56")]
		public virtual Button Element
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Button)DslModeling::DomainRoleInfo.GetRolePlayer(this, ElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Elements of a ExampleModel
		/// <summary>
		/// Gets a list of Elements.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Button> GetElements(ExampleModel element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Button>, Button>(element, ExampleModelDomainRoleId);
		}
		#endregion
		#region ExampleModel link accessor
		/// <summary>
		/// Get the list of ExampleModelHasElements links to a ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::VELDDev.AvaloniaDSL.ExampleModelHasElements> GetLinksToElements ( global::VELDDev.AvaloniaDSL.ExampleModel exampleModelInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::VELDDev.AvaloniaDSL.ExampleModelHasElements>(exampleModelInstance, global::VELDDev.AvaloniaDSL.ExampleModelHasElements.ExampleModelDomainRoleId);
		}
		#endregion
		#region Element link accessor
		/// <summary>
		/// Get the ExampleModelHasElements link to a Button.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::VELDDev.AvaloniaDSL.ExampleModelHasElements GetLinkToExampleModel (global::VELDDev.AvaloniaDSL.Button elementInstance)
		{
			global::System.Collections.Generic.IList<global::VELDDev.AvaloniaDSL.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::VELDDev.AvaloniaDSL.ExampleModelHasElements>(elementInstance, global::VELDDev.AvaloniaDSL.ExampleModelHasElements.ElementDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Element not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ExampleModelHasElements instance accessors
		
		/// <summary>
		/// Get any ExampleModelHasElements links between a given ExampleModel and a Button.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::VELDDev.AvaloniaDSL.ExampleModelHasElements> GetLinks( global::VELDDev.AvaloniaDSL.ExampleModel source, global::VELDDev.AvaloniaDSL.Button target )
		{
			global::System.Collections.Generic.List<global::VELDDev.AvaloniaDSL.ExampleModelHasElements> outLinks = new global::System.Collections.Generic.List<global::VELDDev.AvaloniaDSL.ExampleModelHasElements>();
			global::System.Collections.Generic.IList<global::VELDDev.AvaloniaDSL.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::VELDDev.AvaloniaDSL.ExampleModelHasElements>(source, global::VELDDev.AvaloniaDSL.ExampleModelHasElements.ExampleModelDomainRoleId);
			foreach ( global::VELDDev.AvaloniaDSL.ExampleModelHasElements link in links )
			{
				if ( target.Equals(link.Element) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ExampleModelHasElements link between a given ExampleModeland a Button.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::VELDDev.AvaloniaDSL.ExampleModelHasElements GetLink( global::VELDDev.AvaloniaDSL.ExampleModel source, global::VELDDev.AvaloniaDSL.Button target )
		{
			global::System.Collections.Generic.IList<global::VELDDev.AvaloniaDSL.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::VELDDev.AvaloniaDSL.ExampleModelHasElements>(source, global::VELDDev.AvaloniaDSL.ExampleModelHasElements.ExampleModelDomainRoleId);
			foreach ( global::VELDDev.AvaloniaDSL.ExampleModelHasElements link in links )
			{
				if ( target.Equals(link.Element) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace VELDDev.AvaloniaDSL
{
	/// <summary>
	/// DomainRelationship ButtonReferencesTargets
	/// Reference relationship between Elements.
	/// </summary>
	[DslDesign::DisplayNameResource("VELDDev.AvaloniaDSL.ButtonReferencesTargets.DisplayName", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("VELDDev.AvaloniaDSL.ButtonReferencesTargets.Description", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("61e1fa3e-efa6-4672-a03f-fe7ea377cb84")]
	public partial class ButtonReferencesTargets : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ButtonReferencesTargets domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x61e1fa3e, 0xefa6, 0x4672, 0xa0, 0x3f, 0xfe, 0x7e, 0xa3, 0x77, 0xcb, 0x84);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ButtonReferencesTargets link in the same Partition as the given Button
		/// </summary>
		/// <param name="source">Button to use as the source of the relationship.</param>
		/// <param name="target">Button to use as the target of the relationship.</param>
		public ButtonReferencesTargets(Button source, Button target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ButtonReferencesTargets.SourceDomainRoleId, source), new DslModeling::RoleAssignment(ButtonReferencesTargets.TargetDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ButtonReferencesTargets(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ButtonReferencesTargets(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ButtonReferencesTargets(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ButtonReferencesTargets(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Source domain role code
		
		/// <summary>
		/// Source domain role Id.
		/// </summary>
		public static readonly global::System.Guid SourceDomainRoleId = new global::System.Guid(0xecbbe6e1, 0x1955, 0x4e64, 0x93, 0x32, 0xf4, 0x44, 0xff, 0x50, 0xa8, 0xe3);
		
		/// <summary>
		/// DomainRole Source
		/// Description for VELDDev.AvaloniaDSL.ExampleRelationship.Target
		/// </summary>
		[DslDesign::DisplayNameResource("VELDDev.AvaloniaDSL.ButtonReferencesTargets/Source.DisplayName", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("VELDDev.AvaloniaDSL.ButtonReferencesTargets/Source.Description", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Targets", PropertyDisplayNameKey="VELDDev.AvaloniaDSL.ButtonReferencesTargets/Source.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("ecbbe6e1-1955-4e64-9332-f444ff50a8e3")]
		public virtual Button Source
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Button)DslModeling::DomainRoleInfo.GetRolePlayer(this, SourceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SourceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Sources of a Button
		/// <summary>
		/// Gets a list of Sources.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Button> GetSources(Button element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Button>, Button>(element, TargetDomainRoleId);
		}
		#endregion
		#region Target domain role code
		
		/// <summary>
		/// Target domain role Id.
		/// </summary>
		public static readonly global::System.Guid TargetDomainRoleId = new global::System.Guid(0x151442f4, 0xbb90, 0x4944, 0xbd, 0xe7, 0x50, 0x39, 0xa2, 0x49, 0x7e, 0xaf);
		
		/// <summary>
		/// DomainRole Target
		/// Description for VELDDev.AvaloniaDSL.ExampleRelationship.Source
		/// </summary>
		[DslDesign::DisplayNameResource("VELDDev.AvaloniaDSL.ButtonReferencesTargets/Target.DisplayName", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("VELDDev.AvaloniaDSL.ButtonReferencesTargets/Target.Description", typeof(global::VELDDev.AvaloniaDSL.AvaloniaDomainModel), "VELDDev.AvaloniaDSL.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Sources", PropertyDisplayNameKey="VELDDev.AvaloniaDSL.ButtonReferencesTargets/Target.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("151442f4-bb90-4944-bde7-5039a2497eaf")]
		public virtual Button Target
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Button)DslModeling::DomainRoleInfo.GetRolePlayer(this, TargetDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TargetDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Targets of a Button
		/// <summary>
		/// Gets a list of Targets.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Button> GetTargets(Button element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Button>, Button>(element, SourceDomainRoleId);
		}
		#endregion
		#region Source link accessor
		/// <summary>
		/// Get the list of ButtonReferencesTargets links to a Button.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets> GetLinksToTargets ( global::VELDDev.AvaloniaDSL.Button sourceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets>(sourceInstance, global::VELDDev.AvaloniaDSL.ButtonReferencesTargets.SourceDomainRoleId);
		}
		#endregion
		#region Target link accessor
		/// <summary>
		/// Get the list of ButtonReferencesTargets links to a Button.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets> GetLinksToSources ( global::VELDDev.AvaloniaDSL.Button targetInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets>(targetInstance, global::VELDDev.AvaloniaDSL.ButtonReferencesTargets.TargetDomainRoleId);
		}
		#endregion
		#region ButtonReferencesTargets instance accessors
		
		/// <summary>
		/// Get any ButtonReferencesTargets links between a given Button and a Button.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets> GetLinks( global::VELDDev.AvaloniaDSL.Button source, global::VELDDev.AvaloniaDSL.Button target )
		{
			global::System.Collections.Generic.List<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets> outLinks = new global::System.Collections.Generic.List<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets>();
			global::System.Collections.Generic.IList<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets> links = DslModeling::DomainRoleInfo.GetElementLinks<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets>(source, global::VELDDev.AvaloniaDSL.ButtonReferencesTargets.SourceDomainRoleId);
			foreach ( global::VELDDev.AvaloniaDSL.ButtonReferencesTargets link in links )
			{
				if ( target.Equals(link.Target) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ButtonReferencesTargets link between a given Buttonand a Button.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::VELDDev.AvaloniaDSL.ButtonReferencesTargets GetLink( global::VELDDev.AvaloniaDSL.Button source, global::VELDDev.AvaloniaDSL.Button target )
		{
			global::System.Collections.Generic.IList<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets> links = DslModeling::DomainRoleInfo.GetElementLinks<global::VELDDev.AvaloniaDSL.ButtonReferencesTargets>(source, global::VELDDev.AvaloniaDSL.ButtonReferencesTargets.SourceDomainRoleId);
			foreach ( global::VELDDev.AvaloniaDSL.ButtonReferencesTargets link in links )
			{
				if ( target.Equals(link.Target) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
